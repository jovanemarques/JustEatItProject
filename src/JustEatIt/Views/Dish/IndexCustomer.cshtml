@{
    ViewData["Title"] = "Dishes";
}
<script>
    var map;
    var markers = [];
    var partnersOriginal = [];
    var partners = [];
    var iconFood = 'http://maps.google.com/mapfiles/kml/paddle/ylw-blank.png';

    function loadData() {
        let ne = [];
        let sw = [];

        if (map && map.getBounds()) {
            var bounds = map.getBounds();
            ne = [bounds.getNorthEast().lat(), bounds.getNorthEast().lng()];
            sw = [bounds.getSouthWest().lat(), bounds.getSouthWest().lng()];
        }
        $.post("/Dish/GetDishesByLatLog", { ne: ne, sw: sw }, function (result) {
            partnersOriginal = JSON.parse(result);
            $('#divSpinner').css('display', 'none');
            $('#divSearch').css('display', 'block');
            partners = partnersOriginal.slice(0);
            drawMarkers();
        })
        .fail(function () {
            alert('error');
        });
    }

    function drawMarkers() {
        if (partners) {
            partners.forEach(p => {
                // decide how to show the partner and dishes info
                // insert a link to redirect to the parner page?
                let contentString = '<div id="content">' +
                    '<div id="siteNotice">' +
                    '</div>' +
                    '<h3 id="firstHeading" class="firstHeading">' + p.name + '</h3>' +
                    '<div id="bodyContent">';
                p.dishes.forEach(d => {
                    contentString += '<p>' + d + '</p>';
                });
                contentString += '</div>' +
                    '</div>';
                let infowindow = new google.maps.InfoWindow({
                    content: contentString
                });
                let marker = new google.maps.Marker({ position: p.location, icon: iconFood, map: map });
                marker.addListener('click', function () {
                    infowindow.open(map, marker);
                });
                markers.push(marker);
                //map.addListener('mousemove', function () {
                //    infowindow.close();
                //});
            });
        }
    }

    function refreshMap() {
        let counter = markers.length;
        for (let i = 0; i < counter; i++) {
            let mark = markers.pop(i);
            mark.setMap(null);
            mark = null;
        }
        drawMarkers();
    }
    function search(e) {
        if (e.value == "") {
            partners = partnersOriginal.slice(0);
            refreshMap();
        }
        else if (e.value && e.value.length > 2) {
            partners = [];
            partnersOriginal.forEach(p => {
                let dishes = [];
                p.dishes.forEach(d => {
                    if (d.toLowerCase().indexOf(e.value.toLowerCase()) > -1) {
                        dishes.push(d);
                    }
                });
                if (dishes.length > 0) {
                    let newP = JSON.parse(JSON.stringify(p));
                    newP.dishes = dishes;
                    partners.push(newP);
                }
            });
            refreshMap();
        }
    }
</script>
<div class="container">
    <div class="row">
        <div class="col-12">
            <h1>Choose your next great meal</h1>
            <div class="spinner-border text-success" role="status" id="divSpinner">
                <span class="sr-only">Loading...</span>
            </div>
            <div class="form-group" id="divSearch" style="display:none;">
                <label for="search">Choose what you want to eat</label>
                <input type="text" class="form-control" id="search" placeholder="Write a dish name" onkeyup="search(this);">
            </div>
            <div class="form-check">
                <a asp-controller="Order" asp-action="Create" title="List">List</a>
            </div>
            <div id="map" style="height:600px"></div>
        </div>
    </div>
</div>
<script>
    function initMap() {
        var toronto = { lat: 43.6532, lng: -79.3832 };
        map = new google.maps.Map(document.getElementById('map'),
            {
                center: toronto,
                zoom: 10
            });
        google.maps.event.addListener(map, 'bounds_changed', function () {
            loadData();
        });
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDEWhmZWq1kyojM46KzO-yZOYsw4jdkP6w&callback=initMap" async defer></script>
